map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

proxy_cache_path /tmp/medicontents-be levels=1:2 keys_zone=medicontents-be:10m max_size=1g inactive=60m use_temp_path=off;
limit_req_zone $binary_remote_addr$http_x_forwarded_for zone=medicontents-bee:16m rate=500r/m;

server {
  listen 443 ssl;
  http2 on;
  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;
  server_name medicontents-be-u45006.vm.elestio.app;

  client_header_buffer_size 32k;
  large_client_header_buffers 4 64k;
  underscores_in_headers on;

  #access_log  /var/log/nginx/access_log;
  #error_log /var/log/nginx/error_log;

  include /usr/local/openresty/nginx/conf/error-pages.conf;
  
  location / {

    content_by_lua_block {
        ngx.header['server'] = 'Elestio'
    }
    access_by_lua_block {
        ngx.header['server'] = 'Elestio'
    }

    # CORS 설정 - location 블록 내부에 배치
    add_header 'Access-Control-Allow-Origin' 'https://medicontents-qa-u45006.vm.elestio.app' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # OPTIONS 요청 처리
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'https://medicontents-qa-u45006.vm.elestio.app' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Max-Age' 1728000 always;
      add_header 'Content-Type' 'text/plain; charset=utf-8' always;
      add_header 'Content-Length' 0 always;
      return 204;
    }

    limit_req zone=medicontents-bee burst=500 nodelay;
    limit_req_log_level warn;

    add_header X-Cache-Status $upstream_cache_status;
    proxy_ignore_headers Cache-Control;

    #proxy_cache_valid any 0s;
    #proxy_cache medicontents-be;
    #proxy_cache_lock on;
    #proxy_cache_methods GET HEAD;
    #proxy_cache_bypass $cookie_nocache $arg_nocache;
    #proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    #proxy_cache_bypass $http_upgrade;

    proxy_http_version 1.1;
    proxy_pass http://172.17.0.1:3000/;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port  $server_port;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_set_header Authorization $http_authorization;
    proxy_pass_header  Authorization;

    proxy_hide_header x-powered-by;

  }
}
